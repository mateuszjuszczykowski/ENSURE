@inherits LayoutComponentBase

<div class="bb-page">

    <Sidebar @ref="sidebar"
             Class="sidebar"
             IconName="IconName.BootstrapFill"
             Title="E.N.S.U.R.E."
             DataProvider="SidebarDataProvider"
             NavItems="navItems"/>

    <main>
        <DevicePicker />
        <article class="content px-4">
            <div class="py-2">
                @Body
            </div>
        </article>
    </main>

</div>

<Modal IsServiceModal="true" />
<Preload />
<Toasts class="p-3" AutoHide="true" Delay="4000" Placement="ToastsPlacement.TopRight" />

@code {
    private Sidebar sidebar = default!;
    private IEnumerable<NavItem> navItems = default!;

    private async Task<SidebarDataProviderResult> SidebarDataProvider(SidebarDataProviderRequest request)
    {
        if (navItems is null)
            navItems = GetNavItems();

        return await Task.FromResult(request.ApplyTo(navItems));
    }

    private IEnumerable<NavItem> GetNavItems()
    {
        navItems = new List<NavItem>
        {
            new NavItem { Id = "1", Href = "/", IconName = IconName.HouseDoorFill, Text = "Home", Match=NavLinkMatch.All},
            new NavItem { Id = "2", Href = "/overview", IconName = IconName.BarChartFill, Text = "Overview"},
            new NavItem { Id = "3", Href = "/measurements", IconName = IconName.Clipboard2DataFill, Text = "Measurements"},
            new NavItem { Id = "4", Href = "/summary", IconName = IconName.PuzzleFill, Text = "Summary"},
            // new NavItem { Id = "4", Href = "/control", IconName = IconName.PuzzleFill, Text = "Control Panel"}
        };

        return navItems;
    }
}